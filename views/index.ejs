<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <style>
        :root {
            --primary: #4299e1; /* Blue */
            --primary-dark: #2b6cb0; /* Darker Blue */
            --secondary: #63b3ed; /* Lighter Blue */
            --danger: #e53e3e; /* Red */
            --danger-dark: #c53030; /* Darker Red */
            --text: #2d3748;background: linear-gradient(135deg, #ff7f50, #1e3a8a); /* Orange to Blue gradient */
            --card: rgba(255, 255, 255, 0.9);
            --border: rgba(226, 232, 240, 0.8);
            --shadow: rgba(0, 0, 0, 0.1);
            --hover-light: rgba(66, 153, 225, 0.1); /* Light blue hover */
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: var(--background); /* Gradient background */
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            color: var(--text);
            padding: 20px;
            line-height: 1.6;
        }

        .container {
            background-color: var(--card);
            backdrop-filter: blur(12px);
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 15px 30px -10px rgba(0, 0, 0, 0.1),
                        0 10px 15px -5px rgba(0, 0, 0, 0.04);
            width: 600px;
            max-width: 100%;
            border: 1px solid var(--border);
            transition: all 0.3s ease-in-out;
        }

        .container:hover {
            box-shadow: 0 15px 30px -10px var(--primary);
        }

        h1 {
            font-size: 2.2rem;
            font-weight: 700;
            margin-bottom: 2rem;
            text-align: center;
            color: var(--primary-dark);
            letter-spacing: -0.025em;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--text);
        }

        .datetime-group {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        input {
            width: 100%;
            padding: 0.75rem 1rem;
            border-radius: 0.5rem;
            border: 1px solid var(--border);
            background-color: white;
            color: var(--text);
            font-size: 1rem;
            transition: all 0.3s;
        }

        input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.25); /* Blue glow */
        }

        input[type="time"] {
            appearance: none;
            padding: 0.75rem 1rem;
        }

        button {
            width: 100%;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            border: none;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, #ff7f50, #1e3a8a); /* Orange to Blue gradient */            color: white;
            box-shadow: 0 4px 6px -1px rgba(66, 153, 225, 0.2);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 8px rgba(66, 153, 225, 0.25);
        }

        .btn-primary:active {
            transform: translateY(2px);
        }

        table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            margin-top: 2rem;
            background: white;
            border-radius: 0.5rem;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid var(--border);
            word-wrap: break-word;
            font-size: 1rem;
        }

        th {
            background-color: var(--primary-light);
            font-weight: 600;
            color: var(--primary-dark);
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        tr:last-child td {
            border-bottom: none;
        }

        tr:hover {
            background-color: var(--hover-light); /* Light blue hover */
        }

        .delete-btn {
            width: auto;
            padding: 0.5rem 1rem;
            background: linear-gradient(145deg, var(--danger), var(--danger-dark)); /* Red gradient */
            color: white;
            font-size: 0.875rem;
            cursor: pointer;
            border-radius: 0.5rem;
        }

        .delete-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 6px rgba(229, 62, 62, 0.2);
        }

        @media (max-width: 768px) {
            .container {
                padding: 1.5rem;
                width: 95%;
            }

            .datetime-group {
                grid-template-columns: 1fr;
                gap: 0.5rem;
            }

            .form-group {
                margin-bottom: 1rem;
            }

            h1 {
                font-size: 1.8rem;
            }

            th, td {
                padding: 0.75rem;
                font-size: 0.9rem;
            }

            .delete-btn {
                padding: 0.375rem 0.75rem;
                font-size: 0.75rem;
            }
        }

        @media (max-width: 480px) {
            .container {
                padding: 1.25rem;
            }

            table {
                font-size: 0.75rem;
                margin-top: 1rem;
            }

            th, td {
                padding: 0.5rem;
            }

            .delete-btn {
                font-size: 0.7rem;
                padding: 0.25rem 0.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>To-Do List</h1>

        <form action="/add-task" method="POST">
            <div class="form-group">
                <label class="form-label" for="taskName">Task Name</label>
                <input type="text" id="taskName" name="name" placeholder="Enter task name" required>
            </div>

            <div class="form-group">
                <label class="form-label" for="priority">Priority Level</label>
                <input type="number" id="priority" name="priority" min="1" max="3" placeholder="Enter priority (1-3)" required>
            </div>

            <div class="datetime-group">
                <div class="form-group">
                    <label class="form-label" for="dueDate">Due Date</label>
                    <input type="date" id="dueDate" name="dueDate" required>
                </div>

                <div class="form-group">
                    <label class="form-label" for="dueTime">Due Time</label>
                    <input type="time" id="dueTime" name="dueTime" required>
                </div>
            </div>

            <button type="submit" class="btn-primary">Add Task</button>
        </form>

        <table>
            <thead>
                <tr>
                    <th>Task Name</th>
                    <th>Priority</th>
                    <th>Due Date & Time</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% tasks.forEach(task => { %>
                    <tr>
                        <td><%= task.name %></td>
                        <td><%= task.priority %></td>
                        <td>
                            <%= task.dueDate.toLocaleDateString() %>
                            <%= task.dueDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %>
                        </td>
                        <td>
                            <button class="delete-btn" data-id="<%= task._id %>">Delete</button>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>

    <script>
        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', async function(event) {
                event.preventDefault();
                const taskId = this.dataset.id;
                
                if (confirm('Are you sure you want to delete this task?')) {
                    try {
                        const response = await fetch(`/delete-task/${taskId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        if (response.ok) {
                            this.closest('tr').remove();
                        } else {
                            throw new Error('Failed to delete task');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert('Failed to delete task. Please try again.');
                    }
                }
            });
        });
    </script>
</body>
</html>
